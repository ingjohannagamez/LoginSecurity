Protected Folder (suscripción de 1 año, 1 PC)
4B66E-8AB0C-9A354-880B1

Defrag 7 PRO (suscripción de 1 año, 1 PC) - español*
F6ECC-6C53D-1D1B2-68BD1

Booster 9 PRO (suscripción de 1 año, 3 PCs) - español
87CA3-92D89-545E4-0A3A1

DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS authorities;

CREATE TABLE public.users
(
   username VARCHAR(50)  NOT NULL,
   password VARCHAR(100) NOT NULL,
   enabled  TINYINT      NOT NULL DEFAULT 1,
   PRIMARY KEY (username)
 );

CREATE TABLE public.authorities
(
username  VARCHAR(50) NOT NULL,
authority VARCHAR(50) NOT NULL,
FOREIGN KEY (username) REFERENCES users (username)
);

CREATE TABLE public.persistent_logins
(
	series character varying(64) NOT NULL,
    username character varying(50) NOT NULL,
    token character varying(64) NOT NULL,
    last_used timestamp without time zone NOT NULL,
    PRIMARY KEY (series)
);

ALTER TABLE IF EXISTS public.persistent_logins
    OWNER to postgres;
	
INSERT INTO public.users(id, enabled, password, username)
	VALUES ((SELECT nextval('hibernate_sequence')), true, '$2a$10$Q83RlKl0KMPzH2IyiNWxGeMbyFNtxTFgJbmR2z1zwihFmAWrL8kBK', 'admin');
INSERT INTO public.users(id, enabled, password, username)
	VALUES ((SELECT nextval('hibernate_sequence')), true, '$2a$10$Q83RlKl0KMPzH2IyiNWxGeMbyFNtxTFgJbmR2z1zwihFmAWrL8kBK', 'user');
	
INSERT INTO public.authority(id, authority)
	VALUES (1, 'ROLE_ADMIN');
INSERT INTO public.authority(id, authority)
	VALUES (2, 'ROLE_USER');
	
INSERT INTO public.authorities_users(usuario_id, authority_id)
	VALUES (1, 1);
INSERT INTO public.authorities_users(usuario_id, authority_id)
	VALUES (1, 2);
INSERT INTO public.authorities_users(usuario_id, authority_id)
	VALUES (2, 1);
INSERT INTO public.authorities_users(usuario_id, authority_id)
	VALUES (2, 2);
	
INSERT INTO users (username, password, enabled)
values ('user','pass',1);

INSERT INTO authorities (username, authority)
values ('user', 'ROLE_USER');
	
SELECT u.*, aa.authority FROM public.authorities_users as au 
INNER JOIN public.authority as aa ON au.authority_id = aa.id 
INNER JOIN public.users u ON au.usuario_id = u.id;


package com.cristianruizblog.loginSecurity.config;